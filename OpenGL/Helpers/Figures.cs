namespace OpenGL
{
    public static class Figures
    {
        public static Mesh CubeTransparent(int hProgramm)
        {
            var colors = new float[24 * 4];

            int k = 0;
            for (int i = 0; i < 24; i++, k += 4)
            {
                colors[k + 0] = 1;
                colors[k + 1] = 1;
                colors[k + 2] = 1;
                colors[k + 3] = 1;
            }
            colors = null;

            return new Mesh(
               verts: new float[]
               {
                -1, -1, -1,
                +1, -1, -1,
                +1, +1, -1,
                -1, +1, -1,

                -1, -1, +1,
                +1, -1, +1,
                +1, +1, +1,
                -1, +1, +1,

                -1, -1, -1,
                -1, +1, -1,
                -1, +1, +1,
                -1, -1, +1,

                +1, -1, +1,
                +1, +1, +1,
                +1, +1, -1,
                +1, -1, -1,

                -1, +1, -1,
                +1, +1, -1,
                +1, +1, +1,
                -1, +1, +1,

                -1, -1, +1,
                +1, -1, +1,
                +1, -1, -1,
                -1, -1, -1,
               },
               idx: new int[]
               {
                0,   1,  2,
                0,   2,  3,
                7,   6,  5,
                7,   5,  4,

                8,   9, 10,
                8,  10, 11,
                12, 13, 14,
                14, 15, 12,

                16, 18, 19,
                16, 17, 18,
                20, 21, 22,
                22, 23, 20,
               },
               colors: colors,
               normals: new float[]
               {
                0,0,-1,
                0,0,-1,
                0,0,-1,
                0,0,-1,
                //Top
                0,0,1,
                0,0,1,
                0,0,1,
                0,0,1,
                //Left
                -1,0,0,
                -1,0,0,
                -1,0,0,
                -1,0,0,
                //Right
                1,0,0,
                1,0,0,
                1,0,0,
                1,0,0,
                //Front
                0,1,0,
                0,1,0,
                0,1,0,
                0,1,0,
                //Back
                0,-1,0,
                0,-1,0,
                0,-1,0,
                0,-1,0,
               },
               uvs: new float[]
               {
                0,1,
                1,1,
                1,0,
                0,0,

                0,1,
                1,1,
                1,0,
                0,0,

                0,1,
                1,1,
                1,0,
                0,0,

                0,1,
                1,1,
                1,0,
                0,0,

                0,1,
                1,1,
                1,0,
                0,0,

                0,1,
                1,1,
                1,0,
                0,0,
               },
               hProgram: hProgramm
               );
        }

        public static Mesh Cube(int hProgramm) => new Mesh(
        verts: new float[]
        {
        -1, -1, -1,
        +1, -1, -1,
        +1, +1, -1,
        -1, +1, -1,

        -1, -1, +1,
        +1, -1, +1,
        +1, +1, +1,
        -1, +1, +1,

        -1, -1, -1,
        -1, +1, -1,
        -1, +1, +1,
        -1, -1, +1,

        +1, -1, +1,
        +1, +1, +1,
        +1, +1, -1,
        +1, -1, -1,

        -1, +1, -1,
        +1, +1, -1,
        +1, +1, +1,
        -1, +1, +1,

        -1, -1, +1,
        +1, -1, +1,
        +1, -1, -1,
        -1, -1, -1,
        },
        idx: new int[]
        {
        0,   1,  2,
        0,   2,  3,
        7,   6,  5,
        7,   5,  4,

        8,   9, 10,
        8,  10, 11,
        12, 13, 14,
        14, 15, 12,

        16, 18, 19,
        16, 17, 18,
        20, 21, 22,
        22, 23, 20,
        },
        colors: new float[]
        {
        1,0,0,1,
        0,1,0,1,
        0,0,1,1,
        1,1,0,1,

        1,0,0,1,
        0,1,0,1,
        0,0,1,1,
        1,1,0,1,

        1,0,0,1,
        0,1,0,1,
        0,0,1,1,
        1,1,0,1,

        1,0,0,1,
        0,1,0,1,
        0,0,1,1,
        1,1,0,1,

        1,0,0,1,
        0,1,0,1,
        0,0,1,1,
        1,1,0,1,

        1,0,0,1,
        0,1,0,1,
        0,0,1,1,
        1,1,0,1,
        },
        normals: new float[]
        {
        0,0,-1,
        0,0,-1,
        0,0,-1,
        0,0,-1,
        //Top
        0,0,1,
        0,0,1,
        0,0,1,
        0,0,1,
        //Left
        -1,0,0,
        -1,0,0,
        -1,0,0,
        -1,0,0,
        //Right
        1,0,0,
        1,0,0,
        1,0,0,
        1,0,0,
        //Front
        0,1,0,
        0,1,0,
        0,1,0,
        0,1,0,
        //Back
        0,-1,0,
        0,-1,0,
        0,-1,0,
        0,-1,0,
        },
        uvs: new float[]
        {
        0,1,
        1,1,
        1,0,
        0,0,

        0,1,
        1,1,
        1,0,
        0,0,

        0,1,
        1,1,
        1,0,
        0,0,

        0,1,
        1,1,
        1,0,
        0,0,

        0,1,
        1,1,
        1,0,
        0,0,

        0,1,
        1,1,
        1,0,
        0,0,
        },
        hProgram: hProgramm
        );
    }
}